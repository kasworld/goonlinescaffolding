// Code generated by "genprotocol -ver=ee0c2a9542c23df14c7723030f3c8ad53da871d9e014d150b2e62d1ce8399fde -basedir=. -prefix=gos -statstype=int"

package gos_handlenoti

/* obj base demux fn map template

var DemuxNoti2ObjFnMap = [...]func(me interface{}, hd gos_packet.Header, body interface{}) error {
gos_idnoti.Invalid : objRecvNotiFn_Invalid, // Invalid not used, make empty packet error
gos_idnoti.StageInfo : objRecvNotiFn_StageInfo, // StageInfo for client display
gos_idnoti.StageChat : objRecvNotiFn_StageChat, // StageChat broadcasted chat

}

	// Invalid not used, make empty packet error
	func objRecvNotiFn_Invalid(me interface{}, hd gos_packet.Header, body interface{}) error {
		robj , ok := body.(*gos_obj.NotiInvalid_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	// StageInfo for client display
	func objRecvNotiFn_StageInfo(me interface{}, hd gos_packet.Header, body interface{}) error {
		robj , ok := body.(*gos_obj.NotiStageInfo_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

	// StageChat broadcasted chat
	func objRecvNotiFn_StageChat(me interface{}, hd gos_packet.Header, body interface{}) error {
		robj , ok := body.(*gos_obj.NotiStageChat_data)
		if !ok {
			return fmt.Errorf("packet mismatch %v", body )
		}
		return fmt.Errorf("Not implemented %v", robj)
	}

*/
