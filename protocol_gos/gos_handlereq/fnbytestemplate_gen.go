// Code generated by "genprotocol -ver=68269c8bfeecd6e461aa862d64007f60a1aeccd64229d523ae7b99a446255112 -basedir=. -prefix=gos -statstype=int"

package gos_handlereq

/* bytes base fn map api template , unmarshal in api
	var DemuxReq2BytesAPIFnMap = [...]func(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error){
	gos_idcmd.Invalid: bytesAPIFn_ReqInvalid,
gos_idcmd.Login: bytesAPIFn_ReqLogin,
gos_idcmd.Heartbeat: bytesAPIFn_ReqHeartbeat,
gos_idcmd.MakeStage: bytesAPIFn_ReqMakeStage,
gos_idcmd.EnterStage: bytesAPIFn_ReqEnterStage,
gos_idcmd.ChatToStage: bytesAPIFn_ReqChatToStage,
gos_idcmd.LeaveStage: bytesAPIFn_ReqLeaveStage,

}   // DemuxReq2BytesAPIFnMap

	func bytesAPIFn_ReqInvalid(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqInvalid_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspInvalid_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqLogin(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqLogin_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspLogin_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqHeartbeat(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqHeartbeat_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspHeartbeat_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqMakeStage(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqMakeStage_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspMakeStage_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqEnterStage(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqEnterStage_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspEnterStage_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqChatToStage(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqChatToStage_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspChatToStage_data{
		}
		return sendHeader, sendBody, nil
	}

	func bytesAPIFn_ReqLeaveStage(
		me interface{}, hd gos_packet.Header, rbody []byte) (
		gos_packet.Header, interface{}, error) {
		// robj, err := gos_json.UnmarshalPacket(hd, rbody)
		// if err != nil {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", rbody)
		// }
		// recvBody, ok := robj.(*gos_obj.ReqLeaveStage_data)
		// if !ok {
		// 	return hd, nil, fmt.Errorf("Packet type miss match %v", robj)
		// }
		// _ = recvBody

		sendHeader := gos_packet.Header{
			ErrorCode : gos_error.None,
		}
		sendBody := &gos_obj.RspLeaveStage_data{
		}
		return sendHeader, sendBody, nil
	}

*/
