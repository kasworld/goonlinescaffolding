// Code generated by "genenum -typename=Way9Type -packagename=way9type -basedir=enum"

package way9type

import "fmt"

type Way9Type uint8

const (
	Center    Way9Type = iota //
	North                     //
	NorthEast                 //
	East                      //
	SouthEast                 //
	South                     //
	SouthWest                 //
	West                      //
	NorthWest                 //

	Way9Type_Count int = iota
)

var _Way9Type2string = [Way9Type_Count][2]string{
	Center:    {"Center", ""},
	North:     {"North", ""},
	NorthEast: {"NorthEast", ""},
	East:      {"East", ""},
	SouthEast: {"SouthEast", ""},
	South:     {"South", ""},
	SouthWest: {"SouthWest", ""},
	West:      {"West", ""},
	NorthWest: {"NorthWest", ""},
}

func (e Way9Type) String() string {
	if e >= 0 && e < Way9Type(Way9Type_Count) {
		return _Way9Type2string[e][0]
	}
	return fmt.Sprintf("Way9Type%d", uint8(e))
}

func (e Way9Type) CommentString() string {
	if e >= 0 && e < Way9Type(Way9Type_Count) {
		return _Way9Type2string[e][1]
	}
	return ""
}

var _string2Way9Type = map[string]Way9Type{
	"Center":    Center,
	"North":     North,
	"NorthEast": NorthEast,
	"East":      East,
	"SouthEast": SouthEast,
	"South":     South,
	"SouthWest": SouthWest,
	"West":      West,
	"NorthWest": NorthWest,
}

func String2Way9Type(s string) (Way9Type, bool) {
	v, b := _string2Way9Type[s]
	return v, b
}
